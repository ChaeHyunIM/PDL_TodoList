{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { todoListState } from '../../store/atoms';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = _ref => {\n  _s();\n\n  let {\n    item,\n    index: currentIndex\n  } = _ref;\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  const index = todoList.findIndex(listItem => listItem === item);\n\n  const editItemText = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    const newList = replaceItemAtIndex(todoList, index, { ...item,\n      text: value\n    });\n    setTodoList(newList);\n  };\n\n  const toggleItemCompletion = () => {\n    const newList = replaceItemAtIndex(todoList, index, { ...item,\n      isComplete: !item.isComplete\n    });\n    setTodoList(newList);\n  };\n\n  const deleteItem = () => {\n    const newList = removeItemAtIndex(todoList, index);\n    setTodoList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: item.id,\n    index: index,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      children: [currentIndex, \"\\uBC88\\uC9F8\", todoList.content, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: item.text,\n        onChange: editItemText,\n        style: item.isMajor ? {\n          backgroundColor: 'lightblue'\n        } : {\n          backgroundColor: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: item.isComplete,\n        onChange: toggleItemCompletion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteItem,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoItem, \"Oi+JSns/bR/ePD6nLGJGeiEvdC4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = TodoItem;\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n  return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItem.js"],"names":["React","useRef","useRecoilState","todoListState","Draggable","TodoItem","item","index","currentIndex","todoList","setTodoList","findIndex","listItem","editItemText","target","value","newList","replaceItemAtIndex","text","toggleItemCompletion","isComplete","deleteItem","removeItemAtIndex","id","provided","innerRef","draggableProps","dragHandleProps","content","isMajor","backgroundColor","arr","newValue","slice"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\nimport {useRecoilState} from 'recoil';\nimport {todoListState} from '../../store/atoms';\nimport {Draggable} from 'react-beautiful-dnd';\n\nconst TodoItem = ({item, index: currentIndex}) => {\n    const [todoList, setTodoList] = useRecoilState(todoListState);\n    const index = todoList.findIndex((listItem) => listItem === item);\n\n    const editItemText = ({target: {value}}) => {\n        const newList = replaceItemAtIndex(todoList, index, {\n            ...item,\n            text: value,\n        });\n        setTodoList(newList);\n    };\n    const toggleItemCompletion = () => {\n        const newList = replaceItemAtIndex(todoList, index, {\n            ...item,\n            isComplete: !item.isComplete,\n        });\n        setTodoList(newList);\n    };\n\n    const deleteItem = () => {\n        const newList = removeItemAtIndex(todoList, index);\n        setTodoList(newList);\n    };\n\n    return (\n        <Draggable draggableId={item.id} index={index}>\n            {(provided) => (\n                <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                >\n                    {currentIndex}번째\n                    {todoList.content}\n                    <input\n                        type='text'\n                        value={item.text}\n                        onChange={editItemText}\n                        style={\n                            item.isMajor\n                                ? {backgroundColor: 'lightblue'}\n                                : {backgroundColor: 'red'}\n                        }\n                    />\n                    <input\n                        type='checkbox'\n                        checked={item.isComplete}\n                        onChange={toggleItemCompletion}\n                    />\n                    <button onClick={deleteItem}>X</button>\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}