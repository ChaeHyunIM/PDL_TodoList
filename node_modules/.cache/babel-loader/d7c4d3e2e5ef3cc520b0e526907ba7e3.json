{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItemCreator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { todoListState } from '../../store/atoms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItemCreator = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const setTodoList = useSetRecoilState(todoListState);\n  const initial = Array.from({\n    length: todoList.length\n  }, (v, k) => k).map(k => {\n    const custom = {\n      id: `id-${k}`,\n      content: `List ${k}`\n    };\n    return custom;\n  });\n\n  const addMajorItem = () => {\n    setTodoList(oldTodoList => [...oldTodoList, {\n      id: getId(),\n      text: inputValue,\n      isComplete: false,\n      isMajor: true\n    }]);\n    setInputValue('');\n  };\n\n  const addMinorItem = () => {\n    setTodoList(oldTodoList => [...oldTodoList, {\n      id: getId(),\n      text: inputValue,\n      isComplete: false,\n      isMajor: false\n    }]);\n    setInputValue('');\n  };\n\n  const onChange = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setInputValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMajorItem,\n      disabled: inputValue == '' ? true : false,\n      children: \"Add1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMinorItem,\n      disabled: inputValue == '' ? true : false,\n      children: \"Add2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoItemCreator, \"gvrCM0Rx032ow4M2LLvenE72TyU=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = TodoItemCreator;\nlet id = 0;\n\nconst getId = () => {\n  return id++;\n};\n\nexport default TodoItemCreator;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItemCreator\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItemCreator.js"],"names":["React","useState","useSetRecoilState","todoListState","TodoItemCreator","inputValue","setInputValue","setTodoList","initial","Array","from","length","todoList","v","k","map","custom","id","content","addMajorItem","oldTodoList","getId","text","isComplete","isMajor","addMinorItem","onChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,iBAAR,QAAgC,QAAhC;AACA,SAAQC,aAAR,QAA4B,mBAA5B;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMM,WAAW,GAAGL,iBAAiB,CAACC,aAAD,CAArC;AAEA,QAAMK,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAW;AAACC,IAAAA,MAAM,EAAEC,QAAQ,CAACD;AAAlB,GAAX,EAAsC,CAACE,CAAD,EAAIC,CAAJ,KAAUA,CAAhD,EAAmDC,GAAnD,CACdD,CAAD,IAAO;AACN,UAAME,MAAM,GAAG;AACdC,MAAAA,EAAE,EAAG,MAAKH,CAAE,EADE;AAEdI,MAAAA,OAAO,EAAG,QAAOJ,CAAE;AAFL,KAAf;AAKA,WAAOE,MAAP;AACA,GARc,CAAhB;;AAWA,QAAMG,YAAY,GAAG,MAAM;AAC1BZ,IAAAA,WAAW,CAAEa,WAAD,IAAiB,CAC5B,GAAGA,WADyB,EAE5B;AAACH,MAAAA,EAAE,EAAEI,KAAK,EAAV;AAAcC,MAAAA,IAAI,EAAEjB,UAApB;AAAgCkB,MAAAA,UAAU,EAAE,KAA5C;AAAmDC,MAAAA,OAAO,EAAE;AAA5D,KAF4B,CAAlB,CAAX;AAIAlB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACA,GAND;;AAQA,QAAMmB,YAAY,GAAG,MAAM;AAC1BlB,IAAAA,WAAW,CAAEa,WAAD,IAAiB,CAC5B,GAAGA,WADyB,EAE5B;AAACH,MAAAA,EAAE,EAAEI,KAAK,EAAV;AAAcC,MAAAA,IAAI,EAAEjB,UAApB;AAAgCkB,MAAAA,UAAU,EAAE,KAA5C;AAAmDC,MAAAA,OAAO,EAAE;AAA5D,KAF4B,CAAlB,CAAX;AAIAlB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACA,GAND;;AAQA,QAAMoB,QAAQ,GAAG,QAAuB;AAAA,QAAtB;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA;AAAD;AAAT,KAAsB;AACvCtB,IAAAA,aAAa,CAACsB,KAAD,CAAb;AACA,GAFD;;AAIA,sBACC;AAAA,4BACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEvB,UAA1B;AAAsC,MAAA,QAAQ,EAAEqB;AAAhD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AACC,MAAA,OAAO,EAAEP,YADV;AAEC,MAAA,QAAQ,EAAEd,UAAU,IAAI,EAAd,GAAmB,IAAnB,GAA0B,KAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAQC;AACC,MAAA,OAAO,EAAEoB,YADV;AAEC,MAAA,QAAQ,EAAEpB,UAAU,IAAI,EAAd,GAAmB,IAAnB,GAA0B,KAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CApDD;;GAAMD,e;UAEeF,iB;;;KAFfE,e;AAsDN,IAAIa,EAAE,GAAG,CAAT;;AACA,MAAMI,KAAK,GAAG,MAAM;AACnB,SAAOJ,EAAE,EAAT;AACA,CAFD;;AAIA,eAAeb,eAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useSetRecoilState} from 'recoil';\nimport {todoListState} from '../../store/atoms';\n\nconst TodoItemCreator = () => {\n\tconst [inputValue, setInputValue] = useState('');\n\tconst setTodoList = useSetRecoilState(todoListState);\n\n\tconst initial = Array.from({length: todoList.length}, (v, k) => k).map(\n\t\t(k) => {\n\t\t\tconst custom = {\n\t\t\t\tid: `id-${k}`,\n\t\t\t\tcontent: `List ${k}`,\n\t\t\t};\n\n\t\t\treturn custom;\n\t\t},\n\t);\n\n\tconst addMajorItem = () => {\n\t\tsetTodoList((oldTodoList) => [\n\t\t\t...oldTodoList,\n\t\t\t{id: getId(), text: inputValue, isComplete: false, isMajor: true},\n\t\t]);\n\t\tsetInputValue('');\n\t};\n\n\tconst addMinorItem = () => {\n\t\tsetTodoList((oldTodoList) => [\n\t\t\t...oldTodoList,\n\t\t\t{id: getId(), text: inputValue, isComplete: false, isMajor: false},\n\t\t]);\n\t\tsetInputValue('');\n\t};\n\n\tconst onChange = ({target: {value}}) => {\n\t\tsetInputValue(value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<input type='text' value={inputValue} onChange={onChange} />\n\t\t\t<button\n\t\t\t\tonClick={addMajorItem}\n\t\t\t\tdisabled={inputValue == '' ? true : false}\n\t\t\t>\n\t\t\t\tAdd1\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonClick={addMinorItem}\n\t\t\t\tdisabled={inputValue == '' ? true : false}\n\t\t\t>\n\t\t\t\tAdd2\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nlet id = 0;\nconst getId = () => {\n\treturn id++;\n};\n\nexport default TodoItemCreator;\n"]},"metadata":{},"sourceType":"module"}