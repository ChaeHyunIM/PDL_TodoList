{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { todoListState } from '../store/atoms';\nimport { useRecoilState } from 'recoil';\nimport TodoItemCreator from './TodoItem/TodoItemCreator';\nimport TodoItem from './TodoItem/TodoItem';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const todo = reorder(state.quotes, result.source.index, result.destination.index);\n    setTodoList(todo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(TodoItemCreator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), todoList.map(todoItem => /*#__PURE__*/_jsxDEV(TodoItem, {\n        item: todoItem\n      }, todoItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoList, \"Oi+JSns/bR/ePD6nLGJGeiEvdC4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/TodoList.js"],"names":["todoListState","useRecoilState","TodoItemCreator","TodoItem","DragDropContext","Droppable","TodoList","todoList","setTodoList","onDragEnd","result","destination","index","source","todo","reorder","state","quotes","map","todoItem","id"],"mappings":";;;AAAA,SAAQA,aAAR,QAA4B,gBAA5B;AACA,SAAQC,cAAR,QAA6B,QAA7B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAAQC,eAAR,EAAyBC,SAAzB,QAAyC,qBAAzC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,cAAc,CAACD,aAAD,CAA9C;;AAEA,QAAMS,SAAS,GAAIC,MAAD,IAAY;AAC7B,QAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AACxB;AACA;;AAED,QAAID,MAAM,CAACC,WAAP,CAAmBC,KAAnB,KAA6BF,MAAM,CAACG,MAAP,CAAcD,KAA/C,EAAsD;AACrD;AACA;;AAED,UAAME,IAAI,GAAGC,OAAO,CACnBC,KAAK,CAACC,MADa,EAEnBP,MAAM,CAACG,MAAP,CAAcD,KAFK,EAGnBF,MAAM,CAACC,WAAP,CAAmBC,KAHA,CAApB;AAMAJ,IAAAA,WAAW,CAACM,IAAD,CAAX;AACA,GAhBD;;AAkBA,sBACC,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAEL,SAA5B;AAAA,2BACC,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,MAAvB;AAAA,8BAGC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAHD,EAIEF,QAAQ,CAACW,GAAT,CAAcC,QAAD,iBACb,QAAC,QAAD;AAA4B,QAAA,IAAI,EAAEA;AAAlC,SAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cADA,CAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CAjCD;;GAAMd,Q;UAC2BL,c;;;KAD3BK,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import {todoListState} from '../store/atoms';\nimport {useRecoilState} from 'recoil';\nimport TodoItemCreator from './TodoItem/TodoItemCreator';\nimport TodoItem from './TodoItem/TodoItem';\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd';\n\nconst TodoList = () => {\n\tconst [todoList, setTodoList] = useRecoilState(todoListState);\n\n\tconst onDragEnd = (result) => {\n\t\tif (!result.destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.destination.index === result.source.index) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst todo = reorder(\n\t\t\tstate.quotes,\n\t\t\tresult.source.index,\n\t\t\tresult.destination.index,\n\t\t);\n\n\t\tsetTodoList(todo);\n\t};\n\n\treturn (\n\t\t<DragDropContext onDragEnd={onDragEnd}>\n\t\t\t<Droppable droppableId='list'>\n\t\t\t\t{/* <TodoListStats /> */}\n\t\t\t\t{/* <TodoListFilters /> */}\n\t\t\t\t<TodoItemCreator />\n\t\t\t\t{todoList.map((todoItem) => (\n\t\t\t\t\t<TodoItem key={todoItem.id} item={todoItem} />\n\t\t\t\t))}\n\t\t\t</Droppable>\n\t\t</DragDropContext>\n\t);\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}