{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItemCreator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { todoListState } from '../../store/atoms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItemCreator = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  const initial = Array.from({\n    length: todoList.length + 1\n  }, (v, k) => k).map(k => {\n    const custom = {\n      id: `id-${k}`,\n      content: `List ${k}`\n    };\n    return custom;\n  });\n\n  const addMajorItem = () => {\n    setTodoList(oldTodoList => [...oldTodoList, {\n      id: getId(),\n      text: inputValue,\n      isComplete: false,\n      isMajor: true,\n      quote: initial\n    }]);\n    setInputValue('');\n  };\n\n  const addMinorItem = () => {\n    setTodoList(oldTodoList => [...oldTodoList, {\n      id: getId(),\n      text: inputValue,\n      isComplete: false,\n      isMajor: false,\n      quote: initial\n    }]);\n    setInputValue('');\n  };\n\n  const onChange = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setInputValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMajorItem,\n      disabled: inputValue === '',\n      children: \"Add1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMinorItem,\n      disabled: inputValue === '',\n      children: \"Add2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoItemCreator, \"BGfVeNVTj3yTQrehg1NZ3rvJc3g=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = TodoItemCreator;\nlet id = 0;\n\nconst getId = () => {\n  return `id-${id++}`;\n};\n\nexport default TodoItemCreator;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItemCreator\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItemCreator.js"],"names":["React","useState","useRecoilState","todoListState","TodoItemCreator","inputValue","setInputValue","todoList","setTodoList","initial","Array","from","length","v","k","map","custom","id","content","addMajorItem","oldTodoList","getId","text","isComplete","isMajor","quote","addMinorItem","onChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,cAAR,QAA6B,QAA7B;AACA,SAAQC,aAAR,QAA4B,mBAA5B;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BN,cAAc,CAACC,aAAD,CAA9C;AAEA,QAAMM,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAW;AAACC,IAAAA,MAAM,EAAEL,QAAQ,CAACK,MAAT,GAAkB;AAA3B,GAAX,EAA0C,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAApD,EAAuDC,GAAvD,CACdD,CAAD,IAAO;AACN,UAAME,MAAM,GAAG;AACdC,MAAAA,EAAE,EAAG,MAAKH,CAAE,EADE;AAEdI,MAAAA,OAAO,EAAG,QAAOJ,CAAE;AAFL,KAAf;AAKA,WAAOE,MAAP;AACA,GARc,CAAhB;;AAWA,QAAMG,YAAY,GAAG,MAAM;AAC1BX,IAAAA,WAAW,CAAEY,WAAD,IAAiB,CAC5B,GAAGA,WADyB,EAE5B;AACCH,MAAAA,EAAE,EAAEI,KAAK,EADV;AAECC,MAAAA,IAAI,EAAEjB,UAFP;AAGCkB,MAAAA,UAAU,EAAE,KAHb;AAICC,MAAAA,OAAO,EAAE,IAJV;AAKCC,MAAAA,KAAK,EAAEhB;AALR,KAF4B,CAAlB,CAAX;AAUAH,IAAAA,aAAa,CAAC,EAAD,CAAb;AACA,GAZD;;AAcA,QAAMoB,YAAY,GAAG,MAAM;AAC1BlB,IAAAA,WAAW,CAAEY,WAAD,IAAiB,CAC5B,GAAGA,WADyB,EAE5B;AACCH,MAAAA,EAAE,EAAEI,KAAK,EADV;AAECC,MAAAA,IAAI,EAAEjB,UAFP;AAGCkB,MAAAA,UAAU,EAAE,KAHb;AAICC,MAAAA,OAAO,EAAE,KAJV;AAKCC,MAAAA,KAAK,EAAEhB;AALR,KAF4B,CAAlB,CAAX;AAUAH,IAAAA,aAAa,CAAC,EAAD,CAAb;AACA,GAZD;;AAcA,QAAMqB,QAAQ,GAAG,QAAuB;AAAA,QAAtB;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA;AAAD;AAAT,KAAsB;AACvCvB,IAAAA,aAAa,CAACuB,KAAD,CAAb;AACA,GAFD;;AAIA,sBACC;AAAA,4BACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAExB,UAA1B;AAAsC,MAAA,QAAQ,EAAEsB;AAAhD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,OAAO,EAAER,YAAjB;AAA+B,MAAA,QAAQ,EAAEd,UAAU,KAAK,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC;AAAQ,MAAA,OAAO,EAAEqB,YAAjB;AAA+B,MAAA,QAAQ,EAAErB,UAAU,KAAK,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CA1DD;;GAAMD,e;UAE2BF,c;;;KAF3BE,e;AA4DN,IAAIa,EAAE,GAAG,CAAT;;AACA,MAAMI,KAAK,GAAG,MAAM;AACnB,SAAQ,MAAKJ,EAAE,EAAG,EAAlB;AACA,CAFD;;AAIA,eAAeb,eAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useRecoilState} from 'recoil';\nimport {todoListState} from '../../store/atoms';\n\nconst TodoItemCreator = () => {\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [todoList, setTodoList] = useRecoilState(todoListState);\n\n\tconst initial = Array.from({length: todoList.length + 1}, (v, k) => k).map(\n\t\t(k) => {\n\t\t\tconst custom = {\n\t\t\t\tid: `id-${k}`,\n\t\t\t\tcontent: `List ${k}`,\n\t\t\t};\n\n\t\t\treturn custom;\n\t\t},\n\t);\n\n\tconst addMajorItem = () => {\n\t\tsetTodoList((oldTodoList) => [\n\t\t\t...oldTodoList,\n\t\t\t{\n\t\t\t\tid: getId(),\n\t\t\t\ttext: inputValue,\n\t\t\t\tisComplete: false,\n\t\t\t\tisMajor: true,\n\t\t\t\tquote: initial,\n\t\t\t},\n\t\t]);\n\t\tsetInputValue('');\n\t};\n\n\tconst addMinorItem = () => {\n\t\tsetTodoList((oldTodoList) => [\n\t\t\t...oldTodoList,\n\t\t\t{\n\t\t\t\tid: getId(),\n\t\t\t\ttext: inputValue,\n\t\t\t\tisComplete: false,\n\t\t\t\tisMajor: false,\n\t\t\t\tquote: initial,\n\t\t\t},\n\t\t]);\n\t\tsetInputValue('');\n\t};\n\n\tconst onChange = ({target: {value}}) => {\n\t\tsetInputValue(value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<input type='text' value={inputValue} onChange={onChange} />\n\t\t\t<button onClick={addMajorItem} disabled={inputValue === ''}>\n\t\t\t\tAdd1\n\t\t\t</button>\n\t\t\t<button onClick={addMinorItem} disabled={inputValue === ''}>\n\t\t\t\tAdd2\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nlet id = 0;\nconst getId = () => {\n\treturn `id-${id++}`;\n};\n\nexport default TodoItemCreator;\n"]},"metadata":{},"sourceType":"module"}