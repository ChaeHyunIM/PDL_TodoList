{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/TodoList/TodoListStats.js\",\n    _s = $RefreshSig$();\n\nimport { todoListStatsState } from '../../store/atoms';\nimport { useRecoilValue } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListStats = () => {\n  _s();\n\n  const {\n    totalNum,\n    totalCompletedNum,\n    totalUncompletedNum,\n    MajorTotalNum,\n    MinorTotalNum,\n    percentCompleted\n  } = useRecoilValue(todoListStatsState);\n  const formattedPercentCompleted = Math.round(percentCompleted * 100);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Total items: \", totalNum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Items completed: \", totalCompletedNum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Items not completed: \", totalUncompletedNum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Percent completed: \", formattedPercentCompleted, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Total Major tasks : \", MajorTotalNum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Total Minor tasks: \", MinorTotalNum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoListStats, \"32xteOcHa2xBAhV27troIS0yh7s=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = TodoListStats;\nexport default TodoListStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListStats\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/TodoList/TodoListStats.js"],"names":["todoListStatsState","useRecoilValue","TodoListStats","totalNum","totalCompletedNum","totalUncompletedNum","MajorTotalNum","MinorTotalNum","percentCompleted","formattedPercentCompleted","Math","round"],"mappings":";;;AAAA,SAAQA,kBAAR,QAAiC,mBAAjC;AACA,SAAQC,cAAR,QAA6B,QAA7B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC3B,QAAM;AACLC,IAAAA,QADK;AAELC,IAAAA,iBAFK;AAGLC,IAAAA,mBAHK;AAILC,IAAAA,aAJK;AAKLC,IAAAA,aALK;AAMLC,IAAAA;AANK,MAOFP,cAAc,CAACD,kBAAD,CAPlB;AASA,QAAMS,yBAAyB,GAAGC,IAAI,CAACC,KAAL,CAAWH,gBAAgB,GAAG,GAA9B,CAAlC;AAEA,sBACC;AAAA,4BACC;AAAA,kCAAkBL,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,sCAAsBC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,0CAA0BC,mBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAA,wCAAwBI,yBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAA,yCAAyBH,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAMC;AAAA,wCAAwBC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CAtBD;;GAAML,a;UAQDD,c;;;KARCC,a;AAwBN,eAAeA,aAAf","sourcesContent":["import {todoListStatsState} from '../../store/atoms';\nimport {useRecoilValue} from 'recoil';\n\nconst TodoListStats = () => {\n\tconst {\n\t\ttotalNum,\n\t\ttotalCompletedNum,\n\t\ttotalUncompletedNum,\n\t\tMajorTotalNum,\n\t\tMinorTotalNum,\n\t\tpercentCompleted,\n\t} = useRecoilValue(todoListStatsState);\n\n\tconst formattedPercentCompleted = Math.round(percentCompleted * 100);\n\n\treturn (\n\t\t<ul>\n\t\t\t<li>Total items: {totalNum}</li>\n\t\t\t<li>Items completed: {totalCompletedNum}</li>\n\t\t\t<li>Items not completed: {totalUncompletedNum}</li>\n\t\t\t<li>Percent completed: {formattedPercentCompleted}%</li>\n\t\t\t<li>Total Major tasks : {MajorTotalNum}</li>\n\t\t\t<li>Total Minor tasks: {MinorTotalNum}</li>\n\t\t</ul>\n\t);\n};\n\nexport default TodoListStats;\n"]},"metadata":{},"sourceType":"module"}