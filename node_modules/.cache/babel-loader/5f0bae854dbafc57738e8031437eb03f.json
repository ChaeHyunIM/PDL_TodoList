{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/DragAndDrop.js\",\n    _s = $RefreshSig$();\n\nimport { todoListState } from '../store/atoms';\nimport { useRecoilState } from 'recoil';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport todoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DragAndDrop = () => {\n  _s();\n\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const todo = reorder(todoList.quote, result.source.index, result.destination.index);\n    setTodoList(todo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"list\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [/*#__PURE__*/_jsxDEV(TodoList, {\n          quote: todoList.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DragAndDrop, \"Oi+JSns/bR/ePD6nLGJGeiEvdC4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = DragAndDrop;\nexport default DragAndDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragAndDrop\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/DragAndDrop.js"],"names":["todoListState","useRecoilState","DragDropContext","Droppable","Draggable","todoList","DragAndDrop","setTodoList","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","onDragEnd","destination","index","source","todo","quote","provided","innerRef","droppableProps","placeholder"],"mappings":";;;AAAA,SAAQA,aAAR,QAA4B,gBAA5B;AACA,SAAQC,cAAR,QAA6B,QAA7B;AACA,SAAQC,eAAR,EAAyBC,SAAzB,EAAoCC,SAApC,QAAoD,qBAApD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACD,QAAD,EAAWE,WAAX,IAA0BN,cAAc,CAACD,aAAD,CAA9C;;AACA,QAAMQ,OAAO,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,QAAnB,KAAgC;AAC/C,UAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAf;AACA,UAAM,CAACM,OAAD,IAAYH,MAAM,CAACI,MAAP,CAAcN,UAAd,EAA0B,CAA1B,CAAlB;AACAE,IAAAA,MAAM,CAACI,MAAP,CAAcL,QAAd,EAAwB,CAAxB,EAA2BI,OAA3B;AACA,WAAOH,MAAP;AACA,GALD;;AAOA,QAAMK,SAAS,GAAIL,MAAD,IAAY;AAC7B,QAAI,CAACA,MAAM,CAACM,WAAZ,EAAyB;AACxB;AACA;;AAED,QAAIN,MAAM,CAACM,WAAP,CAAmBC,KAAnB,KAA6BP,MAAM,CAACQ,MAAP,CAAcD,KAA/C,EAAsD;AACrD;AACA;;AAED,UAAME,IAAI,GAAGb,OAAO,CACnBH,QAAQ,CAACiB,KADU,EAEnBV,MAAM,CAACQ,MAAP,CAAcD,KAFK,EAGnBP,MAAM,CAACM,WAAP,CAAmBC,KAHA,CAApB;AAMAZ,IAAAA,WAAW,CAACc,IAAD,CAAX;AACA,GAhBD;;AAkBA,sBACC,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAEJ,SAA5B;AAAA,2BACC,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,MAAvB;AAAA,gBACGM,QAAD,iBACA;AAAK,QAAA,GAAG,EAAEA,QAAQ,CAACC,QAAnB;AAAA,WAAiCD,QAAQ,CAACE,cAA1C;AAAA,gCACC,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEpB,QAAQ,CAACiB;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEC,QAAQ,CAACG,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CAvCD;;GAAMpB,W;UAC2BL,c;;;KAD3BK,W;AAyCN,eAAeA,WAAf","sourcesContent":["import {todoListState} from '../store/atoms';\nimport {useRecoilState} from 'recoil';\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\nimport todoList from './TodoList';\n\nconst DragAndDrop = () => {\n\tconst [todoList, setTodoList] = useRecoilState(todoListState);\n\tconst reorder = (list, startIndex, endIndex) => {\n\t\tconst result = Array.from(list);\n\t\tconst [removed] = result.splice(startIndex, 1);\n\t\tresult.splice(endIndex, 0, removed);\n\t\treturn result;\n\t};\n\n\tconst onDragEnd = (result) => {\n\t\tif (!result.destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.destination.index === result.source.index) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst todo = reorder(\n\t\t\ttodoList.quote,\n\t\t\tresult.source.index,\n\t\t\tresult.destination.index,\n\t\t);\n\n\t\tsetTodoList(todo);\n\t};\n\n\treturn (\n\t\t<DragDropContext onDragEnd={onDragEnd}>\n\t\t\t<Droppable droppableId='list'>\n\t\t\t\t{(provided) => (\n\t\t\t\t\t<div ref={provided.innerRef} {...provided.droppableProps}>\n\t\t\t\t\t\t<TodoList quote={todoList.quote} />\n\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Droppable>\n\t\t</DragDropContext>\n\t);\n};\n\nexport default DragAndDrop;\n"]},"metadata":{},"sourceType":"module"}