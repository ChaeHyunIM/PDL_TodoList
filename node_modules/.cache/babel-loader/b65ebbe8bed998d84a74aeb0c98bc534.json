{"ast":null,"code":"import { atom, selector } from 'recoil';\nexport const todoListState = atom({\n  key: 'todoListState',\n  default: []\n});\nexport const todoListFilterState = atom({\n  key: 'todoListFilterState',\n  default: 'Show all'\n});\nexport const filteredTodoListState = selector({\n  key: 'filteredTodoListState',\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const filter = get(todoListFilterState);\n    const list = get(todoListState);\n\n    switch (filter) {\n      case 'Show Completed':\n        return list.filter(item => item.isComplete);\n\n      case 'Show Uncompleted':\n        return list.filter(item => !item.isComplete);\n\n      default:\n        return list;\n    }\n  }\n});\nexport const todoListStatsState = selector({\n  key: 'todoListStatsState',\n  get: _ref2 => {\n    let {\n      get\n    } = _ref2;\n    const todoList = get(todoListState);\n    const totalNum = todoList.length;\n    const totalCompletedNum = todoList.filter(item => item.isComplete).length;\n    const totalUncompletedNum = totalNum - totalCompletedNum;\n    const percentCompleted = totalNum === 0 ? 0 : totalCompletedNum / totalNum;\n    return {\n      totalNum,\n      totalCompletedNum,\n      totalUncompletedNum,\n      percentCompleted\n    };\n  }\n});","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/store/atoms.js"],"names":["atom","selector","todoListState","key","default","todoListFilterState","filteredTodoListState","get","filter","list","item","isComplete","todoListStatsState","todoList","totalNum","length","totalCompletedNum","totalUncompletedNum","percentCompleted"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,QAAd,QAA6B,QAA7B;AAEA,OAAO,MAAMC,aAAa,GAAGF,IAAI,CAAC;AACjCG,EAAAA,GAAG,EAAE,eAD4B;AAEjCC,EAAAA,OAAO,EAAE;AAFwB,CAAD,CAA1B;AAKP,OAAO,MAAMC,mBAAmB,GAAGL,IAAI,CAAC;AACvCG,EAAAA,GAAG,EAAE,qBADkC;AAEvCC,EAAAA,OAAO,EAAE;AAF8B,CAAD,CAAhC;AAKP,OAAO,MAAME,qBAAqB,GAAGL,QAAQ,CAAC;AAC7CE,EAAAA,GAAG,EAAE,uBADwC;AAE7CI,EAAAA,GAAG,EAAE,QAAW;AAAA,QAAV;AAACA,MAAAA;AAAD,KAAU;AACf,UAAMC,MAAM,GAAGD,GAAG,CAACF,mBAAD,CAAlB;AACA,UAAMI,IAAI,GAAGF,GAAG,CAACL,aAAD,CAAhB;;AAEA,YAAQM,MAAR;AACC,WAAK,gBAAL;AACC,eAAOC,IAAI,CAACD,MAAL,CAAaE,IAAD,IAAUA,IAAI,CAACC,UAA3B,CAAP;;AACD,WAAK,kBAAL;AACC,eAAOF,IAAI,CAACD,MAAL,CAAaE,IAAD,IAAU,CAACA,IAAI,CAACC,UAA5B,CAAP;;AACD;AACC,eAAOF,IAAP;AANF;AAQA;AAd4C,CAAD,CAAtC;AAiBP,OAAO,MAAMG,kBAAkB,GAAGX,QAAQ,CAAC;AAC1CE,EAAAA,GAAG,EAAE,oBADqC;AAE1CI,EAAAA,GAAG,EAAE,SAAW;AAAA,QAAV;AAACA,MAAAA;AAAD,KAAU;AACf,UAAMM,QAAQ,GAAGN,GAAG,CAACL,aAAD,CAApB;AACA,UAAMY,QAAQ,GAAGD,QAAQ,CAACE,MAA1B;AACA,UAAMC,iBAAiB,GAAGH,QAAQ,CAACL,MAAT,CACxBE,IAAD,IAAUA,IAAI,CAACC,UADU,EAExBI,MAFF;AAGA,UAAME,mBAAmB,GAAGH,QAAQ,GAAGE,iBAAvC;AACA,UAAME,gBAAgB,GACrBJ,QAAQ,KAAK,CAAb,GAAiB,CAAjB,GAAqBE,iBAAiB,GAAGF,QAD1C;AAGA,WAAO;AACNA,MAAAA,QADM;AAENE,MAAAA,iBAFM;AAGNC,MAAAA,mBAHM;AAINC,MAAAA;AAJM,KAAP;AAMA;AAlByC,CAAD,CAAnC","sourcesContent":["import {atom, selector} from 'recoil';\n\nexport const todoListState = atom({\n\tkey: 'todoListState',\n\tdefault: [],\n});\n\nexport const todoListFilterState = atom({\n\tkey: 'todoListFilterState',\n\tdefault: 'Show all',\n});\n\nexport const filteredTodoListState = selector({\n\tkey: 'filteredTodoListState',\n\tget: ({get}) => {\n\t\tconst filter = get(todoListFilterState);\n\t\tconst list = get(todoListState);\n\n\t\tswitch (filter) {\n\t\t\tcase 'Show Completed':\n\t\t\t\treturn list.filter((item) => item.isComplete);\n\t\t\tcase 'Show Uncompleted':\n\t\t\t\treturn list.filter((item) => !item.isComplete);\n\t\t\tdefault:\n\t\t\t\treturn list;\n\t\t}\n\t},\n});\n\nexport const todoListStatsState = selector({\n\tkey: 'todoListStatsState',\n\tget: ({get}) => {\n\t\tconst todoList = get(todoListState);\n\t\tconst totalNum = todoList.length;\n\t\tconst totalCompletedNum = todoList.filter(\n\t\t\t(item) => item.isComplete,\n\t\t).length;\n\t\tconst totalUncompletedNum = totalNum - totalCompletedNum;\n\t\tconst percentCompleted =\n\t\t\ttotalNum === 0 ? 0 : totalCompletedNum / totalNum;\n\n\t\treturn {\n\t\t\ttotalNum,\n\t\t\ttotalCompletedNum,\n\t\t\ttotalUncompletedNum,\n\t\t\tpercentCompleted,\n\t\t};\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}