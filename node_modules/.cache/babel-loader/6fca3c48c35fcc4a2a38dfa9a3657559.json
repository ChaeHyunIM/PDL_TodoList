{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItemCreator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSetRecoilState, useRecoilState } from 'recoil';\nimport { todoListState } from '../../store/atoms';\nimport { todoListMajor } from \"../../store/atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItemCreator = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [isMajor, setIsMajor] = useRecoilState(todoListMajor);\n  const setTodoList = useSetRecoilState(todoListState);\n\n  const addMajorItem = () => {\n    setTodoList(oldTodoList => [...oldTodoList, {\n      id: getId(),\n      text: inputValue,\n      isComplete: false\n    }]);\n    setInputValue('');\n    setIsMajor(true);\n  };\n\n  const addMinorItem = () => {\n    setTodoList(oldTodoList => [...oldTodoList, {\n      id: getId(),\n      text: inputValue,\n      isComplete: false\n    }]);\n    setInputValue('');\n    setIsMajor(false);\n  };\n\n  const onChange = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setInputValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMajorItem,\n      children: \"Add1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMinorItem,\n      children: \"Add2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoItemCreator, \"evHglANR/do+sh1whqcoBSU6flc=\", false, function () {\n  return [useRecoilState, useSetRecoilState];\n});\n\n_c = TodoItemCreator;\nlet id = 0;\n\nconst getId = () => {\n  return id++;\n};\n\nexport default TodoItemCreator;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItemCreator\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItemCreator.js"],"names":["React","useState","useSetRecoilState","useRecoilState","todoListState","todoListMajor","TodoItemCreator","inputValue","setInputValue","isMajor","setIsMajor","setTodoList","addMajorItem","oldTodoList","id","getId","text","isComplete","addMinorItem","onChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,iBAAR,EAA2BC,cAA3B,QAAgD,QAAhD;AACA,SAAQC,aAAR,QAA4B,mBAA5B;AACA,SAAQC,aAAR,QAA4B,mBAA5B;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBP,cAAc,CAACE,aAAD,CAA5C;AACA,QAAMM,WAAW,GAAGT,iBAAiB,CAACE,aAAD,CAArC;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AAC1BD,IAAAA,WAAW,CAAEE,WAAD,IAAiB,CAC5B,GAAGA,WADyB,EAE5B;AAACC,MAAAA,EAAE,EAAEC,KAAK,EAAV;AAAcC,MAAAA,IAAI,EAAET,UAApB;AAAgCU,MAAAA,UAAU,EAAE;AAA5C,KAF4B,CAAlB,CAAX;AAIAT,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,GAPD;;AASA,QAAMQ,YAAY,GAAG,MAAM;AAC1BP,IAAAA,WAAW,CAAEE,WAAD,IAAiB,CAC5B,GAAGA,WADyB,EAE5B;AAACC,MAAAA,EAAE,EAAEC,KAAK,EAAV;AAAcC,MAAAA,IAAI,EAAET,UAApB;AAAgCU,MAAAA,UAAU,EAAE;AAA5C,KAF4B,CAAlB,CAAX;AAIAT,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,GAPD;;AASA,QAAMS,QAAQ,GAAG,QAAuB;AAAA,QAAtB;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA;AAAD;AAAT,KAAsB;AACvCb,IAAAA,aAAa,CAACa,KAAD,CAAb;AACA,GAFD;;AAIA,sBACC;AAAA,4BACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEd,UAA1B;AAAsC,MAAA,QAAQ,EAAEY;AAAhD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,OAAO,EAAEP,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAQ,MAAA,OAAO,EAAEM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAlCD;;GAAMZ,e;UAEyBH,c,EACVD,iB;;;KAHfI,e;AAoCN,IAAIQ,EAAE,GAAG,CAAT;;AACA,MAAMC,KAAK,GAAG,MAAM;AACnB,SAAOD,EAAE,EAAT;AACA,CAFD;;AAIA,eAAeR,eAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useSetRecoilState, useRecoilState} from 'recoil';\nimport {todoListState} from '../../store/atoms';\nimport {todoListMajor} from \"../../store/atoms\";\n\nconst TodoItemCreator = () => {\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [isMajor, setIsMajor] = useRecoilState(todoListMajor);\n\tconst setTodoList = useSetRecoilState(todoListState);\n\n\tconst addMajorItem = () => {\n\t\tsetTodoList((oldTodoList) => [\n\t\t\t...oldTodoList,\n\t\t\t{id: getId(), text: inputValue, isComplete: false},\n\t\t]);\n\t\tsetInputValue('');\n\t\tsetIsMajor(true);\n\t};\n\n\tconst addMinorItem = () => {\n\t\tsetTodoList((oldTodoList) => [\n\t\t\t...oldTodoList,\n\t\t\t{id: getId(), text: inputValue, isComplete: false},\n\t\t]);\n\t\tsetInputValue('');\n\t\tsetIsMajor(false);\n\t};\n\n\tconst onChange = ({target: {value}}) => {\n\t\tsetInputValue(value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<input type='text' value={inputValue} onChange={onChange} />\n\t\t\t<button onClick={addMajorItem}>Add1</button>\n\t\t\t<button onClick={addMinorItem}>Add2</button>\n\t\t</div>\n\t);\n};\n\nlet id = 0;\nconst getId = () => {\n\treturn id++;\n};\n\nexport default TodoItemCreator;\n"]},"metadata":{},"sourceType":"module"}