{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { todoListMajor, todoListState } from '../../store/atoms';\nimport { ItemTypes } from './dnd';\nimport update from 'immutability-helper';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = _ref => {\n  _s();\n\n  let {\n    item\n  } = _ref;\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  const index = todoList.findIndex(listItem => listItem === item);\n\n  const editItemText = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    const newList = replaceItemAtIndex(todoList, index, { ...item,\n      text: value\n    });\n    setTodoList(newList);\n  };\n\n  const toggleItemCompletion = () => {\n    const newList = replaceItemAtIndex(todoList, index, { ...item,\n      isComplete: !item.isComplete\n    });\n    setTodoList(newList);\n  };\n\n  const deleteItem = () => {\n    const newList = removeItemAtIndex(todoList, index);\n    setTodoList(newList);\n  };\n\n  const moveList = useCallback((dragIndex, hoverIndex) => {\n    const dragCard = todoList[dragIndex];\n    setTodoList(update(todoList, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, dragCard]]\n    }));\n  }, [todoList]);\n  const ref = useRef(null);\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n\n    hover(item, monitor) {\n      var _ref$current;\n\n      if (!ref.current) {\n        return;\n      }\n\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      const hoverBoundingRect = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect();\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      moveList(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    }\n\n  });\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: ItemTypes.CARD,\n      index\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  drag(drop(ref));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    isDragging: isDragging,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: item.text,\n      onChange: editItemText,\n      style: item.isMajor ? {\n        backgroundColor: 'blue'\n      } : {\n        backgroundColor: 'red'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: item.isComplete,\n      onChange: toggleItemCompletion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteItem,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoItem, \"4SUDrVtTsF0cNrkDm6mcCWrF/9o=\", false, function () {\n  return [useRecoilState, useDrop, useDrag];\n});\n\n_c = TodoItem;\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n  return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItem.js"],"names":["React","useRef","useCallback","useRecoilState","useRecoilValue","todoListMajor","todoListState","ItemTypes","update","useDrag","useDrop","TodoItem","item","todoList","setTodoList","index","findIndex","listItem","editItemText","target","value","newList","replaceItemAtIndex","text","toggleItemCompletion","isComplete","deleteItem","removeItemAtIndex","moveList","dragIndex","hoverIndex","dragCard","$splice","ref","drop","accept","CARD","hover","monitor","current","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","isDragging","drag","type","collect","isMajor","backgroundColor","arr","newValue","slice"],"mappings":"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","sourcesContent":["import React, {useRef, useCallback} from 'react';\nimport {useRecoilState, useRecoilValue} from 'recoil';\nimport {todoListMajor, todoListState} from '../../store/atoms';\nimport {ItemTypes} from './dnd';\nimport update from 'immutability-helper';\n\nimport {useDrag, useDrop} from 'react-dnd';\n\nconst TodoItem = ({item}) => {\n\tconst [todoList, setTodoList] = useRecoilState(todoListState);\n\tconst index = todoList.findIndex((listItem) => listItem === item);\n\tconst editItemText = ({target: {value}}) => {\n\t\tconst newList = replaceItemAtIndex(todoList, index, {\n\t\t\t...item,\n\t\t\ttext: value,\n\t\t});\n\t\tsetTodoList(newList);\n\t};\n\tconst toggleItemCompletion = () => {\n\t\tconst newList = replaceItemAtIndex(todoList, index, {\n\t\t\t...item,\n\t\t\tisComplete: !item.isComplete,\n\t\t});\n\t\tsetTodoList(newList);\n\t};\n\n\tconst deleteItem = () => {\n\t\tconst newList = removeItemAtIndex(todoList, index);\n\t\tsetTodoList(newList);\n\t};\n\n\tconst moveList = useCallback(\n\t\t(dragIndex, hoverIndex) => {\n\t\t\tconst dragCard = todoList[dragIndex];\n\n\t\t\tsetTodoList(\n\t\t\t\tupdate(todoList, {\n\t\t\t\t\t$splice: [\n\t\t\t\t\t\t[dragIndex, 1],\n\t\t\t\t\t\t[hoverIndex, 0, dragCard],\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\t[todoList],\n\t);\n\n\tconst ref = useRef(null);\n\n\tconst [, drop] = useDrop({\n\t\taccept: ItemTypes.CARD,\n\t\thover(item, monitor) {\n\t\t\tif (!ref.current) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst dragIndex = item.index;\n\t\t\tconst hoverIndex = index;\n\n\t\t\tif (dragIndex === hoverIndex) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst hoverBoundingRect = ref.current?.getBoundingClientRect();\n\t\t\tconst hoverMiddleY =\n\t\t\t\t(hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\t\t\tconst clientOffset = monitor.getClientOffset();\n\t\t\tconst hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n\t\t\tif (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmoveList(dragIndex, hoverIndex);\n\t\t\titem.index = hoverIndex;\n\t\t},\n\t});\n\n\tconst [{isDragging}, drag] = useDrag({\n\t\titem: {type: ItemTypes.CARD, index},\n\t\tcollect: (monitor) => ({\n\t\t\tisDragging: monitor.isDragging(),\n\t\t}),\n\t});\n\n\tdrag(drop(ref));\n\n\treturn (\n\t\t<div ref={ref} isDragging={isDragging}>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tvalue={item.text}\n\t\t\t\tonChange={editItemText}\n\t\t\t\tstyle={\n\t\t\t\t\titem.isMajor\n\t\t\t\t\t\t? {backgroundColor: 'blue'}\n\t\t\t\t\t\t: {backgroundColor: 'red'}\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='checkbox'\n\t\t\t\tchecked={item.isComplete}\n\t\t\t\tonChange={toggleItemCompletion}\n\t\t\t/>\n\t\t\t<button onClick={deleteItem}>X</button>\n\t\t</div>\n\t);\n};\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n\treturn [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n\treturn [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}