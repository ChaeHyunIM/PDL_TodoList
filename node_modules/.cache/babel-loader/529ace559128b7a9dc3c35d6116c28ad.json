{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { todoListState } from '../store/atoms';\nimport { useRecoilState } from 'recoil';\nimport TodoItemCreator from './TodoItem/TodoItemCreator';\nimport TodoItem from './TodoItem/TodoItem'; // import {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  console.log(todoList);\n  console.log(todoList.length);\n  const initial = Array.from({\n    length: 10\n  }, (v, k) => k).map(k => {\n    const custom = {\n      id: `id-${k}`,\n      content: `List ${k}`\n    };\n    return custom;\n  }); // const reorder = (list, startIndex, endIndex) => {\n  // \tconst result = Array.from(list);\n  // \tconst [removed] = result.splice(startIndex, 1);\n  // \tresult.splice(endIndex, 0, removed);\n  // \treturn result;\n  // };\n  //\n  // const onDragEnd = (result) => {\n  // \tif (!result.destination) {\n  // \t\treturn;\n  // \t}\n  //\n  // \tif (result.destination.index === result.source.index) {\n  // \t\treturn;\n  // \t}\n  //\n  // \tconst todo = reorder(result.source.index, result.destination.index);\n  //\n  // \tsetTodoList(todo);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoItemCreator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), todoList.map(todoItem => /*#__PURE__*/_jsxDEV(TodoItem, {\n      item: todoItem\n    }, todoItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true);\n};\n\n_s(TodoList, \"Oi+JSns/bR/ePD6nLGJGeiEvdC4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/TodoList.js"],"names":["todoListState","useRecoilState","TodoItemCreator","TodoItem","TodoList","todoList","setTodoList","console","log","length","initial","Array","from","v","k","map","custom","id","content","todoItem"],"mappings":";;;AAAA,SAAQA,aAAR,QAA4B,gBAA5B;AACA,SAAQC,cAAR,QAA6B,QAA7B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,cAAc,CAACD,aAAD,CAA9C;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,MAArB;AAEA,QAAMC,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAW;AAACH,IAAAA,MAAM,EAAE;AAAT,GAAX,EAAyB,CAACI,CAAD,EAAIC,CAAJ,KAAUA,CAAnC,EAAsCC,GAAtC,CAA2CD,CAAD,IAAO;AAChE,UAAME,MAAM,GAAG;AACdC,MAAAA,EAAE,EAAG,MAAKH,CAAE,EADE;AAEdI,MAAAA,OAAO,EAAG,QAAOJ,CAAE;AAFL,KAAf;AAKA,WAAOE,MAAP;AACA,GAPe,CAAhB,CALsB,CActB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACC;AAAA,4BAGC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAHD,EAIEX,QAAQ,CAACU,GAAT,CAAcI,QAAD,iBACb,QAAC,QAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAeA,QAAQ,CAACF,EAAxB;AAAA;AAAA;AAAA;AAAA,YADA,CAJF;AAAA,kBADD;AAUA,CA7CD;;GAAMb,Q;UAC2BH,c;;;KAD3BG,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import {todoListState} from '../store/atoms';\nimport {useRecoilState} from 'recoil';\nimport TodoItemCreator from './TodoItem/TodoItemCreator';\nimport TodoItem from './TodoItem/TodoItem';\n// import {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\n\nconst TodoList = () => {\n\tconst [todoList, setTodoList] = useRecoilState(todoListState);\n\tconsole.log(todoList);\n\tconsole.log(todoList.length);\n\n\tconst initial = Array.from({length: 10}, (v, k) => k).map((k) => {\n\t\tconst custom = {\n\t\t\tid: `id-${k}`,\n\t\t\tcontent: `List ${k}`,\n\t\t};\n\n\t\treturn custom;\n\t});\n\n\t// const reorder = (list, startIndex, endIndex) => {\n\t// \tconst result = Array.from(list);\n\t// \tconst [removed] = result.splice(startIndex, 1);\n\t// \tresult.splice(endIndex, 0, removed);\n\t// \treturn result;\n\t// };\n\t//\n\t// const onDragEnd = (result) => {\n\t// \tif (!result.destination) {\n\t// \t\treturn;\n\t// \t}\n\t//\n\t// \tif (result.destination.index === result.source.index) {\n\t// \t\treturn;\n\t// \t}\n\t//\n\t// \tconst todo = reorder(result.source.index, result.destination.index);\n\t//\n\t// \tsetTodoList(todo);\n\t// };\n\n\treturn (\n\t\t<>\n\t\t\t{/* <TodoListStats /> */}\n\t\t\t{/* <TodoListFilters /> */}\n\t\t\t<TodoItemCreator />\n\t\t\t{todoList.map((todoItem) => (\n\t\t\t\t<TodoItem key={todoItem.id} item={todoItem} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}