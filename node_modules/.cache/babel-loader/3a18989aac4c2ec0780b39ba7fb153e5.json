{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { todoListState } from '../store/atoms';\nimport { useRecoilState } from 'recoil';\nimport TodoItemCreator from './TodoItem/TodoItemCreator';\nimport TodoItem from './TodoItem/TodoItem'; // import {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  console.log(todoList);\n  console.log(todoList.length);\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const todo = reorder(todoList.quote, result.source.index, result.destination.index);\n    setTodoList(todo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoItemCreator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), todoList.map(todoItem => /*#__PURE__*/_jsxDEV(TodoItem, {\n      item: todoItem\n    }, todoItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true);\n};\n\n_s(TodoList, \"Oi+JSns/bR/ePD6nLGJGeiEvdC4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/TodoList.js"],"names":["todoListState","useRecoilState","TodoItemCreator","TodoItem","TodoList","todoList","setTodoList","console","log","length","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","onDragEnd","destination","index","source","todo","quote","map","todoItem","id"],"mappings":";;;AAAA,SAAQA,aAAR,QAA4B,gBAA5B;AACA,SAAQC,cAAR,QAA6B,QAA7B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,cAAc,CAACD,aAAD,CAA9C;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,MAArB;;AAEA,QAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,QAAnB,KAAgC;AAC/C,UAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAf;AACA,UAAM,CAACM,OAAD,IAAYH,MAAM,CAACI,MAAP,CAAcN,UAAd,EAA0B,CAA1B,CAAlB;AACAE,IAAAA,MAAM,CAACI,MAAP,CAAcL,QAAd,EAAwB,CAAxB,EAA2BI,OAA3B;AACA,WAAOH,MAAP;AACA,GALD;;AAOA,QAAMK,SAAS,GAAIL,MAAD,IAAY;AAC7B,QAAI,CAACA,MAAM,CAACM,WAAZ,EAAyB;AACxB;AACA;;AAED,QAAIN,MAAM,CAACM,WAAP,CAAmBC,KAAnB,KAA6BP,MAAM,CAACQ,MAAP,CAAcD,KAA/C,EAAsD;AACrD;AACA;;AAED,UAAME,IAAI,GAAGb,OAAO,CACnBL,QAAQ,CAACmB,KADU,EAEnBV,MAAM,CAACQ,MAAP,CAAcD,KAFK,EAGnBP,MAAM,CAACM,WAAP,CAAmBC,KAHA,CAApB;AAMAf,IAAAA,WAAW,CAACiB,IAAD,CAAX;AACA,GAhBD;;AAkBA,sBACC;AAAA,4BAGC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAHD,EAIElB,QAAQ,CAACoB,GAAT,CAAcC,QAAD,iBACb,QAAC,QAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADA,CAJF;AAAA,kBADD;AAUA,CAxCD;;GAAMvB,Q;UAC2BH,c;;;KAD3BG,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import {todoListState} from '../store/atoms';\nimport {useRecoilState} from 'recoil';\nimport TodoItemCreator from './TodoItem/TodoItemCreator';\nimport TodoItem from './TodoItem/TodoItem';\n// import {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\n\nconst TodoList = () => {\n\tconst [todoList, setTodoList] = useRecoilState(todoListState);\n\tconsole.log(todoList);\n\tconsole.log(todoList.length);\n\n\tconst reorder = (list, startIndex, endIndex) => {\n\t\tconst result = Array.from(list);\n\t\tconst [removed] = result.splice(startIndex, 1);\n\t\tresult.splice(endIndex, 0, removed);\n\t\treturn result;\n\t};\n\n\tconst onDragEnd = (result) => {\n\t\tif (!result.destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.destination.index === result.source.index) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst todo = reorder(\n\t\t\ttodoList.quote,\n\t\t\tresult.source.index,\n\t\t\tresult.destination.index,\n\t\t);\n\n\t\tsetTodoList(todo);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{/* <TodoListStats /> */}\n\t\t\t{/* <TodoListFilters /> */}\n\t\t\t<TodoItemCreator />\n\t\t\t{todoList.map((todoItem) => (\n\t\t\t\t<TodoItem key={todoItem.id} item={todoItem} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}