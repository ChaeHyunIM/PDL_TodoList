{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { todoListState } from '../../store/atoms';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = _ref => {\n  _s();\n\n  let {\n    item\n  } = _ref;\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  const index = todoList.findIndex(listItem => listItem === item);\n\n  const editItemText = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    const newList = replaceItemAtIndex(todoList, index, { ...item,\n      text: value\n    });\n    setTodoList(newList);\n  };\n\n  const toggleItemCompletion = () => {\n    const newList = replaceItemAtIndex(todoList, index, { ...item,\n      isComplete: !item.isComplete\n    });\n    setTodoList(newList);\n  };\n\n  const deleteItem = () => {\n    const newList = removeItemAtIndex(todoList, index);\n    setTodoList(newList);\n  };\n\n  const reorder = (list, startIndesx, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: item.id,\n    index: index,\n    children: [provided => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: item.text,\n        onChange: editItemText,\n        style: item.isMajor ? {\n          backgroundColor: 'blue'\n        } : {\n          backgroundColor: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: item.isComplete,\n        onChange: toggleItemCompletion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteItem,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoItem, \"Oi+JSns/bR/ePD6nLGJGeiEvdC4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = TodoItem;\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n  return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/components/TodoItem/TodoItem.js"],"names":["React","useRef","useRecoilState","todoListState","DragDropContext","Droppable","Draggable","TodoItem","item","todoList","setTodoList","index","findIndex","listItem","editItemText","target","value","newList","replaceItemAtIndex","text","toggleItemCompletion","isComplete","deleteItem","removeItemAtIndex","reorder","list","startIndesx","endIndex","result","Array","from","removed","splice","startIndex","id","provided","isMajor","backgroundColor","arr","newValue","slice"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\nimport {useRecoilState} from 'recoil';\nimport {todoListState} from '../../store/atoms';\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\n\nconst TodoItem = ({item}) => {\n    const [todoList, setTodoList] = useRecoilState(todoListState);\n    const index = todoList.findIndex((listItem) => listItem === item);\n    const editItemText = ({target: {value}}) => {\n        const newList = replaceItemAtIndex(todoList, index, {\n            ...item,\n            text: value,\n        });\n        setTodoList(newList);\n    };\n    const toggleItemCompletion = () => {\n        const newList = replaceItemAtIndex(todoList, index, {\n            ...item,\n            isComplete: !item.isComplete,\n        });\n        setTodoList(newList);\n    };\n\n    const deleteItem = () => {\n        const newList = removeItemAtIndex(todoList, index);\n        setTodoList(newList);\n    };\n\n    const reorder = (list, startIndesx, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n        return result;\n    };\n\n    return (\n        <Draggable draggableId={item.id} index={index}>\n\t\t\t{provided => (\n\t\t\t\t<>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={item.text}\n\t\t\t\t\tonChange={editItemText}\n\t\t\t\t\tstyle={\n\t\t\t\t\t\titem.isMajor\n\t\t\t\t\t\t\t? {backgroundColor: 'blue'}\n\t\t\t\t\t\t\t: {backgroundColor: 'red'}\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\ttype='checkbox'\n\t\t\t\tchecked={item.isComplete}\n\t\t\t\tonChange={toggleItemCompletion}\n\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n            <button onClick={deleteItem}>X</button>\n        </Draggable>\n    );\n};\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}