{"ast":null,"code":"import { atom, selector } from 'recoil';\nexport const todoListState = atom({\n  key: 'todoListState',\n  default: []\n});\nexport const todoListFilterState = atom({\n  key: 'todoListFilterState',\n  default: 'Show all'\n});\nexport const filteredTodoListState = selector({\n  key: 'filteredTodoListState',\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const filter = get(todoListFilterState);\n    const list = get(todoListState);\n\n    switch (filter) {\n      case 'Show Completed':\n        return list.filter(item => item.isComplete);\n\n      case 'Show Uncompleted':\n        return list.filter(item => !item.isComplete);\n\n      default:\n        return list;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/imchaehyeon/Desktop/firstTask/src/store/atoms.js"],"names":["atom","selector","todoListState","key","default","todoListFilterState","filteredTodoListState","get","filter","list","item","isComplete"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,QAAd,QAA6B,QAA7B;AAEA,OAAO,MAAMC,aAAa,GAAGF,IAAI,CAAC;AACjCG,EAAAA,GAAG,EAAE,eAD4B;AAEjCC,EAAAA,OAAO,EAAE;AAFwB,CAAD,CAA1B;AAKP,OAAO,MAAMC,mBAAmB,GAAGL,IAAI,CAAC;AACvCG,EAAAA,GAAG,EAAE,qBADkC;AAEvCC,EAAAA,OAAO,EAAE;AAF8B,CAAD,CAAhC;AAKP,OAAO,MAAME,qBAAqB,GAAGL,QAAQ,CAAC;AAC7CE,EAAAA,GAAG,EAAE,uBADwC;AAE7CI,EAAAA,GAAG,EAAE,QAAW;AAAA,QAAV;AAACA,MAAAA;AAAD,KAAU;AACf,UAAMC,MAAM,GAAGD,GAAG,CAACF,mBAAD,CAAlB;AACA,UAAMI,IAAI,GAAGF,GAAG,CAACL,aAAD,CAAhB;;AAEA,YAAQM,MAAR;AACC,WAAK,gBAAL;AACC,eAAOC,IAAI,CAACD,MAAL,CAAaE,IAAD,IAAUA,IAAI,CAACC,UAA3B,CAAP;;AACD,WAAK,kBAAL;AACC,eAAOF,IAAI,CAACD,MAAL,CAAaE,IAAD,IAAU,CAACA,IAAI,CAACC,UAA5B,CAAP;;AACD;AACC,eAAOF,IAAP;AANF;AAQA;AAd4C,CAAD,CAAtC","sourcesContent":["import {atom, selector} from 'recoil';\n\nexport const todoListState = atom({\n\tkey: 'todoListState',\n\tdefault: [],\n});\n\nexport const todoListFilterState = atom({\n\tkey: 'todoListFilterState',\n\tdefault: 'Show all',\n});\n\nexport const filteredTodoListState = selector({\n\tkey: 'filteredTodoListState',\n\tget: ({get}) => {\n\t\tconst filter = get(todoListFilterState);\n\t\tconst list = get(todoListState);\n\n\t\tswitch (filter) {\n\t\t\tcase 'Show Completed':\n\t\t\t\treturn list.filter((item) => item.isComplete);\n\t\t\tcase 'Show Uncompleted':\n\t\t\t\treturn list.filter((item) => !item.isComplete);\n\t\t\tdefault:\n\t\t\t\treturn list;\n\t\t}\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}